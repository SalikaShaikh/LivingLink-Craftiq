{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api'; // change if needed\n\nconst api = axios.create({\n  baseURL: API_URL\n});\napi.interceptors.request.use(config => {\n  const user = localStorage.getItem('livinglinkUser');\n  if (user) {\n    const token = JSON.parse(user).token;\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n  }\n  return config;\n});\nexport async function fetchWithAuth(url, options = {}) {\n  const token = localStorage.getItem('token');\n  const headers = {\n    'Content-Type': 'application/json',\n    ...(token ? {\n      Authorization: `Bearer ${token}`\n    } : {}),\n    ...options.headers\n  };\n  const response = await fetch(url, {\n    ...options,\n    headers\n  });\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({}));\n    const error = new Error(errorData.message || 'API error');\n    error.status = response.status;\n    throw error;\n  }\n  return response.json();\n}","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","interceptors","request","use","config","user","localStorage","getItem","token","JSON","parse","headers","Authorization","fetchWithAuth","url","options","response","fetch","ok","errorData","json","catch","error","Error","message","status"],"sources":["C:/Users/Salika/Desktop/LivingLink/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api'; // change if needed\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\napi.interceptors.request.use(config => {\r\n  const user = localStorage.getItem('livinglinkUser');\r\n  if (user) {\r\n    const token = JSON.parse(user).token;\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n  }\r\n  return config;\r\n});\r\n\r\nexport async function fetchWithAuth(url, options = {}) {\r\n  const token = localStorage.getItem('token');\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n    ...options.headers,\r\n  };\r\n\r\n  const response = await fetch(url, { ...options, headers });\r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({}));\r\n    const error = new Error(errorData.message || 'API error');\r\n    error.status = response.status;\r\n    throw error;\r\n  }\r\n  return response.json();\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAE7C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH;AACX,CAAC,CAAC;AAEFC,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrC,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;EACnD,IAAIF,IAAI,EAAE;IACR,MAAMG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,CAACG,KAAK;IACpC,IAAIA,KAAK,EAAE;MACTJ,MAAM,CAACO,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;IAClD;EACF;EACA,OAAOJ,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,eAAeS,aAAaA,CAACC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EACrD,MAAMP,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMI,OAAO,GAAG;IACd,cAAc,EAAE,kBAAkB;IAClC,IAAIH,KAAK,GAAG;MAAEI,aAAa,EAAE,UAAUJ,KAAK;IAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACtD,GAAGO,OAAO,CAACJ;EACb,CAAC;EAED,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;IAAE,GAAGC,OAAO;IAAEJ;EAAQ,CAAC,CAAC;EAC1D,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACzD,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACJ,SAAS,CAACK,OAAO,IAAI,WAAW,CAAC;IACzDF,KAAK,CAACG,MAAM,GAAGT,QAAQ,CAACS,MAAM;IAC9B,MAAMH,KAAK;EACb;EACA,OAAON,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}