{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Salika\\\\Desktop\\\\LivingLink\\\\frontend\\\\src\\\\pages\\\\resident\\\\ResidentComplaints.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button, Alert, ListGroup, Spinner } from 'react-bootstrap';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResidentComplaints() {\n  _s();\n  const [text, setText] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [loading, setLoading] = useState(false);\n  const submitComplaint = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    setLoading(true);\n    try {\n      await api.post('/complaints', {\n        text\n      });\n      setSuccess('Complaint submitted anonymously.');\n      setText('');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error submitting complaint');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Submit Anonymous Complaint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitComplaint,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"complaintText\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Complaint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3,\n          value: text,\n          onChange: e => setText(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Submitting...' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ResidentComplaints, \"rb7Zeph36aq+qTaqMxUidp2wk2Q=\");\n_c = ResidentComplaints;\nvar _c;\n$RefreshReg$(_c, \"ResidentComplaints\");","map":{"version":3,"names":["React","useState","Form","Button","Alert","ListGroup","Spinner","api","jsxDEV","_jsxDEV","ResidentComplaints","_s","text","setText","error","setError","success","setSuccess","loading","setLoading","submitComplaint","e","preventDefault","post","err","_err$response","_err$response$data","response","data","message","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","className","controlId","Label","Control","as","rows","value","onChange","target","required","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Salika/Desktop/LivingLink/frontend/src/pages/resident/ResidentComplaints.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button, Alert, ListGroup, Spinner } from 'react-bootstrap';\r\nimport api from '../../services/api';\r\n\r\nexport default function ResidentComplaints() {\r\n  const [text, setText] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const submitComplaint = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    setLoading(true);\r\n    try {\r\n      await api.post('/complaints', { text });\r\n      setSuccess('Complaint submitted anonymously.');\r\n      setText('');\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Error submitting complaint');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Submit Anonymous Complaint</h3>\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      {success && <Alert variant=\"success\">{success}</Alert>}\r\n\r\n      <Form onSubmit={submitComplaint}>\r\n        <Form.Group className=\"mb-3\" controlId=\"complaintText\">\r\n          <Form.Label>Complaint</Form.Label>\r\n          <Form.Control \r\n            as=\"textarea\" \r\n            rows={3}\r\n            value={text} \r\n            onChange={e => setText(e.target.value)} \r\n            required \r\n          />\r\n        </Form.Group>\r\n        <Button type=\"submit\" disabled={loading}>\r\n          {loading ? 'Submitting...' : 'Submit'}\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}