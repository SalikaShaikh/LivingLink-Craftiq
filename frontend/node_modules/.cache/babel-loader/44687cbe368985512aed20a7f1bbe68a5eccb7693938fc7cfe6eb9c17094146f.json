{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Salika\\\\Desktop\\\\LivingLink\\\\frontend\\\\src\\\\pages\\\\dashboards\\\\Resident\\\\Complaints.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Complaints() {\n  _s();\n  const [complaints, setComplaints] = useState([]);\n  const [description, setDescription] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    fetchComplaints();\n  }, []);\n  const fetchComplaints = () => {\n    setLoading(true);\n    // Residents only see complaints they submitted (not anonymous in backend so we just fetch all for now)\n    // To keep anonymous, backend does not save user info, so we just fetch complaints user submitted by description matching is not possible.\n    // So we just fetch all complaints for demo.\n    api.get('/complaints').then(res => {\n      setComplaints(res.data);\n      setLoading(false);\n    }).catch(() => setLoading(false));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    if (!description) {\n      setMessage('Please enter complaint description');\n      return;\n    }\n    setSubmitting(true);\n    try {\n      await api.post('/complaints', {\n        description\n      });\n      setMessage('Complaint submitted anonymously');\n      setDescription('');\n      fetchComplaints();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Submission failed');\n    }\n    setSubmitting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Anonymous Complaints\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          rows: \"3\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 text-success\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        type: \"submit\",\n        disabled: submitting,\n        children: submitting ? 'Submitting...' : 'Submit Complaint'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Submitted Complaints\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 18\n    }, this) : complaints.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No complaints found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 35\n    }, this) : complaints.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: c.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: c.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 67\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: new Date(c.createdAt).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this)\n    }, c._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Complaints, \"vACOQIEOCOB53Y28//QtPnp03GA=\");\n_c = Complaints;\nvar _c;\n$RefreshReg$(_c, \"Complaints\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","Complaints","_s","complaints","setComplaints","description","setDescription","loading","setLoading","submitting","setSubmitting","message","setMessage","fetchComplaints","get","then","res","data","catch","handleSubmit","e","preventDefault","post","err","_err$response","_err$response$data","response","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","rows","value","onChange","target","required","type","disabled","length","map","c","status","Date","createdAt","toLocaleString","_id","_c","$RefreshReg$"],"sources":["C:/Users/Salika/Desktop/LivingLink/frontend/src/pages/dashboards/Resident/Complaints.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../../../utils/api';\r\n\r\nexport default function Complaints() {\r\n  const [complaints, setComplaints] = useState([]);\r\n  const [description, setDescription] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchComplaints();\r\n  }, []);\r\n\r\n  const fetchComplaints = () => {\r\n    setLoading(true);\r\n    // Residents only see complaints they submitted (not anonymous in backend so we just fetch all for now)\r\n    // To keep anonymous, backend does not save user info, so we just fetch complaints user submitted by description matching is not possible.\r\n    // So we just fetch all complaints for demo.\r\n    api.get('/complaints')\r\n      .then(res => {\r\n        setComplaints(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => setLoading(false));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage('');\r\n    if (!description) {\r\n      setMessage('Please enter complaint description');\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      await api.post('/complaints', { description });\r\n      setMessage('Complaint submitted anonymously');\r\n      setDescription('');\r\n      fetchComplaints();\r\n    } catch (err) {\r\n      setMessage(err.response?.data?.message || 'Submission failed');\r\n    }\r\n    setSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Anonymous Complaints</h3>\r\n      <form onSubmit={handleSubmit} className=\"mb-4\">\r\n        <div className=\"mb-3\">\r\n          <label>Description</label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            rows=\"3\"\r\n            value={description}\r\n            onChange={e => setDescription(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        {message && <div className=\"mb-3 text-success\">{message}</div>}\r\n        <button className=\"btn btn-danger\" type=\"submit\" disabled={submitting}>\r\n          {submitting ? 'Submitting...' : 'Submit Complaint'}\r\n        </button>\r\n      </form>\r\n\r\n      <h5>Submitted Complaints</h5>\r\n      {loading ? <p>Loading...</p> : (\r\n        complaints.length === 0 ? <p>No complaints found.</p> :\r\n          complaints.map(c => (\r\n            <div className=\"card mb-2\" key={c._id}>\r\n              <div className=\"card-body\">\r\n                <p>{c.description}</p>\r\n                <small>Status: <strong>{c.status}</strong></small><br />\r\n                <small>{new Date(c.createdAt).toLocaleString()}</small>\r\n              </div>\r\n            </div>\r\n          ))\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}